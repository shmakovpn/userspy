"""
Django settings for userspy project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import secret.secret_settings  # Create secret/secret_setting.py file
# add in secret/secret_settings.py
# def get_DATABASES(): which will return a DATABASES dict for the Django project
# def get_ADTOOLS_DOMAIN(): which will return a name of a domain for the Django project
# def get_ADTOOLS_GROUP(): which will return a name of a domain group or None for the Django project
# def get_ADTOOLS_USER(): which will return an username of a domain for the Django project
# def get_ADTOOLS_PASSWORD(): which will return a password of a domain user for the Django project


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gvgoz_(_1o_p*tuughxwlif0@f0dce@v@mxxazxqkua7%f_71p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_adtools',
    'icons',  # this project icons static files
    'jquery',  # jquery static files
    'bootstrap',  # bootstrap static files
    'fontawesome',  # fonts required for Material Design Bootstrap
    'mdbootstrap',  # Material Design for Bootstrap static files
    'login',
    'spy',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'userspy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'userspy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = secret.secret_settings.get_DATABASES()


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# DJANGO_ADTOOLS
ADTOOLS_DOMAIN: str = secret.secret_settings.get_ADTOOLS_DOMAIN()
ADTOOLS_GROUP: str = secret.secret_settings.get_ADTOOLS_GROUP()
ADTOOLS_USER: str = secret.secret_settings.get_ADTOOLS_USER()
ADTOOLS_PASSWORD: str = secret.secret_settings.get_ADTOOLS_PASSWORD()
# ADTOOLS_NAMESERVERS: List[str] = ['127.0.0.1']  #: list of dns servers to discover ip addresses of domain controllers
# ADTOOLS_NAMESERVERS_PORT: int = 53  #: number of port of nameservers, defaults to 53
USERSPY_TIMEOUT: int = 2  #: userspy daemon timeout
USERSPY_ANALYSIS_DEEPNESS: int = 3  #: number of SpyLog records useing in analysis of user activity
USERSPY_YELLOW_PERIOD: int = 10  #: the **yellow** period in minutes
USERSPY_GREEN_PERIOD: int = 1  #: the **green** period in minutes
USERSPY_HEARTBEAT_INTERVAL: int = 1  #: interval in minutes for checking that **spyd** service is not working
